using System;
using System.Drawing;
using System.Collections.Generic;

namespace Draw
{
	/// <summary>
	/// Класът, който ще бъде използван при управляване на диалога.
	/// </summary>
	public class DialogProcessor : DisplayProcessor
	{
		#region Constructor
		
		public DialogProcessor()
		{
		}
		
		#endregion
		
		#region Properties
		
		/// <summary>
		/// Избран елемент.
		/// </summary>
		private List<Shape> selection = new List<Shape>();
		public List<Shape> Selection {
			get { return selection; }
			set { selection = value; }
		}
		
		/// <summary>
		/// Дали в момента диалога е в състояние на "влачене" на избрания елемент.
		/// </summary>
		private bool isDragging;
		public bool IsDragging {
			get { return isDragging; }
			set { isDragging = value; }
		}
		
		/// <summary>
		/// Последна позиция на мишката при "влачене".
		/// Използва се за определяне на вектора на транслация.
		/// </summary>
		private PointF lastLocation;
		public PointF LastLocation {
			get { return lastLocation; }
			set { lastLocation = value; }
		}

		#endregion

		//Method that Adds Random Rectangle on the screen
		public void AddRandomRectangle()
		{
			Random rnd = new Random();
			int x = rnd.Next(100,1000);
			int y = rnd.Next(100,600);
			
			RectangleShape rect = new RectangleShape(new Rectangle(x,y,100,200));
			rect.FillColor = Color.White;

			ShapeList.Add(rect);
		}

		//Method that Adds Random Elipse on the screen
		public void AddRandomElipse()
		{
			Random rnd = new Random();
			int x = rnd.Next(100, 1000);
			int y = rnd.Next(100, 600);

			ElipseShape elipse = new ElipseShape(new Rectangle(x, y, 100, 200));
			elipse.FillColor = Color.White;
			elipse.StrokeColor = Color.Orange;

			ShapeList.Add(elipse);
		}

		//Method that Adds Random Square on the screen
		public void addRandomSquare()
        {

			Random rnd = new Random();
			int x = rnd.Next(100, 1000);
			int y = rnd.Next(100, 600);

			SquareShape square = new SquareShape(new Rectangle(x, y, 200, 200));
			square.FillColor = Color.White;

			ShapeList.Add(square);
		}

		//Method that Adds Random Line on the screen
		public void addRandomLine()
		{

			Random rnd = new Random();
			int x = rnd.Next(10, 1000);
			int y = rnd.Next(10, 600);
			int x1 = rnd.Next(10, 1000);
			int y2 = rnd.Next(10, 600);


			LineShape line = new LineShape(new Rectangle(x, y, x1, y2));
			line.FillColor = Color.White;

			ShapeList.Add(line);
		}

		public Shape ContainsPoint(PointF point)
		{
			for(int i = ShapeList.Count - 1; i >= 0; i--){
				if (ShapeList[i].Contains(point)){
					ShapeList[i].FillColor = Color.Red;
						
					return ShapeList[i];
				}	
			}
			return null;
		}
		
	
		public void TranslateTo(PointF p)
		{

			foreach (Shape item in Selection)
			{
					item.Location = new PointF(item.Location.X + p.X - lastLocation.X, item.Location.Y + p.Y - lastLocation.Y);
				
			}
			lastLocation = p;
		}
	}
}
